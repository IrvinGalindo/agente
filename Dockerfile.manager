# Dockerfile optimizado para Render (sin Docker-in-Docker)
FROM ubuntu:22.04

# Variables de entorno
ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_VERSION=18

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    nginx \
    supervisor \
    python3 \
    python3-pip \
    nodejs \
    npm \
    postgresql-client \
    redis-tools \
    ca-certificates \
    gnupg \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Instalar Node.js 18 (para n8n)
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Instalar Ollama
RUN curl -fsSL https://ollama.com/install.sh | sh

# Instalar n8n globalmente
RUN npm install -g n8n@latest

# Crear directorios de trabajo
RUN mkdir -p /app /var/log/supervisor /etc/supervisor/conf.d /var/log/nginx

# Crear usuario para n8n
RUN useradd -m -s /bin/bash n8n

# Copiar archivos de configuración
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY nginx.conf /etc/nginx/sites-available/default
COPY start.sh /app/start.sh
COPY evolution-api.js /app/evolution-api.js

# Configurar permisos
RUN chmod +x /app/start.sh
RUN chown -R n8n:n8n /home/n8n
RUN mkdir -p /home/n8n/.n8n && chown -R n8n:n8n /home/n8n/.n8n

# Exponer puerto
EXPOSE 10000

# Usar supervisor para manejar múltiples procesos
CMD ["/app/start.sh"]
