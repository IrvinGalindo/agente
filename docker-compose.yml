version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "${PORT:-10000}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ollama
      - n8n
      - evolution-api
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL:-https}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-America/Mexico_City}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      # Base de datos PostgreSQL
      - DB_TYPE=${DB_TYPE}
      - DB_POSTGRESDB_HOST=${DB_POSTGRESDB_HOST}
      - DB_POSTGRESDB_PORT=${DB_POSTGRESDB_PORT}
      - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      # Autenticación básica
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-password}
    volumes:
      - n8n_data:/home/node/.n8n
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  evolution-api:
    image: atendai/evolution-api:latest
    ports:
      - "8080:8080"
    environment:
      - SERVER_TYPE=${SERVER_TYPE:-https}
      - SERVER_PORT=8080
      - SERVER_URL=${SERVER_URL}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - CORS_METHODS=${CORS_METHODS:-POST,GET,PUT,DELETE}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-ERROR}
      - LOG_COLOR=${LOG_COLOR:-true}
      - LOG_BAILEYS=${LOG_BAILEYS:-error}
      # Base de datos
      - DATABASE_ENABLED=${DATABASE_ENABLED}
      - DATABASE_PROVIDER=${DATABASE_PROVIDER}
      - DATABASE_CONNECTION_URI=${DATABASE_CONNECTION_URI}
      - DATABASE_CONNECTION_DB_PREFIX_NAME=${DATABASE_CONNECTION_DB_PREFIX_NAME}
      # Redis cache
      - CACHE_REDIS_ENABLED=${CACHE_REDIS_ENABLED:-true}
      - CACHE_REDIS_URI=${CACHE_REDIS_URI}
      - CACHE_REDIS_PREFIX_KEY=${CACHE_REDIS_PREFIX_KEY:-evolution}
      - CACHE_REDIS_SAVE_INSTANCES=${CACHE_REDIS_SAVE_INSTANCES:-false}
      # RabbitMQ
      - RABBITMQ_ENABLED=${RABBITMQ_ENABLED:-false}
      - RABBITMQ_URI=${RABBITMQ_URI}
      # WebSocket
      - WEBSOCKET_ENABLED=${WEBSOCKET_ENABLED:-false}
      - WEBSOCKET_GLOBAL_EVENTS=${WEBSOCKET_GLOBAL_EVENTS:-false}
      # WhatsApp Business
      - WA_BUSINESS_TOKEN_WEBHOOK=${WA_BUSINESS_TOKEN_WEBHOOK:-evolution}
      - WA_BUSINESS_URL=${WA_BUSINESS_URL:-https://graph.facebook.com}
      - WA_BUSINESS_VERSION=${WA_BUSINESS_VERSION:-v18.0}
      - WA_BUSINESS_LANGUAGE=${WA_BUSINESS_LANGUAGE:-es}
      # Webhook global
      - WEBHOOK_GLOBAL_URL=${WEBHOOK_GLOBAL_URL}
      - WEBHOOK_GLOBAL_ENABLED=${WEBHOOK_GLOBAL_ENABLED:-false}
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=${WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS:-false}
      # Configuración de sesión
      - CONFIG_SESSION_PHONE_CLIENT=${CONFIG_SESSION_PHONE_CLIENT:-Evolution API}
      - CONFIG_SESSION_PHONE_NAME=${CONFIG_SESSION_PHONE_NAME:-Chrome}
      - CONFIG_SESSION_PHONE_VERSION=${CONFIG_SESSION_PHONE_VERSION}
      - QRCODE_LIMIT=${QRCODE_LIMIT:-30}
      # Autenticación
      - AUTHENTICATION_TYPE=${AUTHENTICATION_TYPE:-apikey}
      - AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY}
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=${AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES:-true}
      # Idioma
      - LANGUAGE=${LANGUAGE:-es}
    volumes:
      - evolution_instances:/evolution/instances
      - evolution_store:/evolution/store
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

volumes:
  ollama_data:
  n8n_data:
  evolution_instances:
  evolution_store:

networks:
  app-network:
    driver: bridge
    